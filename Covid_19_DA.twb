<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.1009.2120                               -->
<workbook original-version='18.1' source-build='2018.2.3 (20182.18.1009.2120)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='globalcovid_data' inline='true' name='federated.0vltg8g0qmayyf12k6ia60iy5j42' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='globalcovid_data' name='textscan.02x7mu60dwktra1125rcg18nsxrq'>
            <connection class='textscan' directory='C:/Users/Sandipsinh/covid/Old_Covid' filename='globalcovid_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.02x7mu60dwktra1125rcg18nsxrq' name='globalcovid_data.csv' table='[globalcovid_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Country/Region' ordinal='0' />
            <column datatype='string' name='Continent' ordinal='1' />
            <column datatype='integer' name='Population' ordinal='2' />
            <column datatype='integer' name='TotalCases' ordinal='3' />
            <column datatype='integer' name='NewCases' ordinal='4' />
            <column datatype='integer' name='TotalDeaths' ordinal='5' />
            <column datatype='integer' name='NewDeaths' ordinal='6' />
            <column datatype='integer' name='TotalRecovered' ordinal='7' />
            <column datatype='integer' name='NewRecovered' ordinal='8' />
            <column datatype='integer' name='ActiveCases' ordinal='9' />
            <column datatype='integer' name='Serious,Critical' ordinal='10' />
            <column datatype='integer' name='Tot Cases/1M pop' ordinal='11' />
            <column datatype='real' name='Deaths/1M pop' ordinal='12' />
            <column datatype='integer' name='TotalTests' ordinal='13' />
            <column datatype='integer' name='Tests/1M pop' ordinal='14' />
            <column datatype='string' name='WHO Region' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[globalcovid_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[globalcovid_data.csv]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[globalcovid_data.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[globalcovid_data.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[globalcovid_data.csv]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewCases]</local-name>
            <parent-name>[globalcovid_data.csv]</parent-name>
            <remote-alias>NewCases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeaths]</local-name>
            <parent-name>[globalcovid_data.csv]</parent-name>
            <remote-alias>TotalDeaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewDeaths]</local-name>
            <parent-name>[globalcovid_data.csv]</parent-name>
            <remote-alias>NewDeaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalRecovered]</local-name>
            <parent-name>[globalcovid_data.csv]</parent-name>
            <remote-alias>TotalRecovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewRecovered]</local-name>
            <parent-name>[globalcovid_data.csv]</parent-name>
            <remote-alias>NewRecovered</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActiveCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ActiveCases]</local-name>
            <parent-name>[globalcovid_data.csv]</parent-name>
            <remote-alias>ActiveCases</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious,Critical</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serious,Critical]</local-name>
            <parent-name>[globalcovid_data.csv]</parent-name>
            <remote-alias>Serious,Critical</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tot Cases/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tot Cases/1M pop]</local-name>
            <parent-name>[globalcovid_data.csv]</parent-name>
            <remote-alias>Tot Cases/1M pop</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths/1M pop]</local-name>
            <parent-name>[globalcovid_data.csv]</parent-name>
            <remote-alias>Deaths/1M pop</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalTests]</local-name>
            <parent-name>[globalcovid_data.csv]</parent-name>
            <remote-alias>TotalTests</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tests/1M pop]</local-name>
            <parent-name>[globalcovid_data.csv]</parent-name>
            <remote-alias>Tests/1M pop</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHO Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WHO Region]</local-name>
            <parent-name>[globalcovid_data.csv]</parent-name>
            <remote-alias>WHO Region</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
      <column caption='Mortality Rate' datatype='real' name='[Calculation_571675729330991104]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([TotalDeaths]/[Population])*10000' />
      </column>
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
      <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[TotalTests]' role='measure' type='quantitative' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.215768' measure-ordering='alphabetic' measure-percentage='0.784232' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country/Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Confirmed vs Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Confirmed vs Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='globalcovid_data' name='federated.0vltg8g0qmayyf12k6ia60iy5j42' />
          </datasources>
          <datasource-dependencies datasource='federated.0vltg8g0qmayyf12k6ia60iy5j42'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([NewDeaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country/Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]' />
              <size column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalCases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalCases:qk]</rows>
        <cols>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalDeaths:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Death cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ff0000' fontname='Tableau Bold'>Top 10 Death cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='globalcovid_data' name='federated.0vltg8g0qmayyf12k6ia60iy5j42' />
          </datasources>
          <datasource-dependencies datasource='federated.0vltg8g0qmayyf12k6ia60iy5j42'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([TotalDeaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country/Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]' direction='DESC' using='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalDeaths:qk]' />
          <slices>
            <column>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalDeaths:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalDeaths:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalDeaths:qk]' />
              <color column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalDeaths:qk]' />
              <text column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]' />
              <text column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalDeaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Dual Axis chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='globalcovid_data' name='federated.0vltg8g0qmayyf12k6ia60iy5j42' />
          </datasources>
          <datasource-dependencies datasource='federated.0vltg8g0qmayyf12k6ia60iy5j42'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalDeaths:qk]' included-values='non-null' />
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalRecovered:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalDeaths:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalDeaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalRecovered:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalRecovered:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalRecovered:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalRecovered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalDeaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalRecovered:qk] + [federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalDeaths:qk])</rows>
        <cols>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Global Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Cases&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='globalcovid_data' name='federated.0vltg8g0qmayyf12k6ia60iy5j42' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vltg8g0qmayyf12k6ia60iy5j42'>
            <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[ActiveCases]' derivation='Sum' name='[sum:ActiveCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[Latitude (generated)]</column>
            <column>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[Longitude (generated)]' field-type='quantitative' max='7297044.5559208095' min='-15840188.834371747' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[Latitude (generated)]' field-type='quantitative' max='9209445.9502684977' min='-6289179.2872480452' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalCases:qk]' />
              <lod column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]' />
              <lod column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:ActiveCases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ff00ff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[Latitude (generated)]</rows>
        <cols>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Mortality chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Measure Rates&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='globalcovid_data' name='federated.0vltg8g0qmayyf12k6ia60iy5j42' />
          </datasources>
          <datasource-dependencies datasource='federated.0vltg8g0qmayyf12k6ia60iy5j42'>
            <column caption='Mortality Rate' datatype='real' name='[Calculation_571675729330991104]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([TotalDeaths]/[Population])*10000' />
            </column>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_571675729330991104]' derivation='Sum' name='[sum:Calculation_571675729330991104:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]' direction='DESC' using='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:Calculation_571675729330991104:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]</rows>
        <cols>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:Calculation_571675729330991104:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Recovery cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Recoveries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='globalcovid_data' name='federated.0vltg8g0qmayyf12k6ia60iy5j42' />
          </datasources>
          <datasource-dependencies datasource='federated.0vltg8g0qmayyf12k6ia60iy5j42'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[TotalRecovered]' derivation='Avg' name='[avg:TotalRecovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([TotalRecovered])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country/Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]' />
              <size column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[avg:TotalRecovered:qk]' />
              <text column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Top 10 confirmed countries '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Confirmed Countries&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='globalcovid_data' name='federated.0vltg8g0qmayyf12k6ia60iy5j42' />
          </datasources>
          <datasource-dependencies datasource='federated.0vltg8g0qmayyf12k6ia60iy5j42'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;USA&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]' direction='DESC' using='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalCases:qk]' />
          <slices>
            <column>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalCases:qk]</rows>
        <cols>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Covid_Dashboard'>
      <style />
      <size maxheight='692' maxwidth='1455' minheight='592' minwidth='555' sizing-mode='range' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97298' id='7' param='horz' type='layout-flow' w='98596' x='702' y='1351'>
            <zone h='97298' id='5' type='layout-basic' w='86656' x='702' y='1351'>
              <zone h='48648' id='1' name='Top 10 confirmed countries ' w='30565' x='702' y='1351'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48648' id='3' name='Global Cases' w='32552' x='31267' y='1351'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48650' id='4' name='Death cases' w='37430' x='702' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48650' id='9' name='Recovery cases' w='24610' x='38132' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48650' id='11' name='Confirmed vs Deaths' w='24616' x='62742' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48648' id='13' name='Dual Axis chart' w='23539' x='63819' y='1351'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='136' h='97298' id='6' is-fixed='true' param='vert' type='layout-flow' w='11940' x='87358' y='1351'>
              <zone h='10979' id='8' name='Death cases' pane-specification-id='0' param='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalDeaths:qk]' type='color' w='11940' x='87358' y='1351'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38175' id='10' name='Recovery cases' pane-specification-id='0' param='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]' type='color' w='11940' x='87358' y='12330'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='21283' id='12' name='Confirmed vs Deaths' pane-specification-id='0' param='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalCases:qk]' type='size' w='11940' x='87358' y='50505'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11148' id='14' name='Dual Axis chart' pane-specification-id='1' param='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[:Measure Names]' type='color' w='11940' x='87358' y='71788'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Top 10 confirmed countries '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalCases:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Global Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Death cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalDeaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Recovery cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Confirmed vs Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalCases:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Mortality chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Dual Axis chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0vltg8g0qmayyf12k6ia60iy5j42].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[sum:TotalDeaths:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Covid_Dashboard'>
      <viewpoints>
        <viewpoint name='Confirmed vs Deaths'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Death cases' />
        <viewpoint name='Dual Axis chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Global Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Recovery cases'>
          <highlight>
            <color-one-way>
              <field>[federated.0vltg8g0qmayyf12k6ia60iy5j42].[none:Country/Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Top 10 confirmed countries ' />
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Confirmed vs Deaths' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Covid_Dashboard' width='192'>
      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
      H6iSlm9uZgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Death cases' width='192'>
      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
      z8+IPjO6emlWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dual Axis chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global Cases' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOx9ebheVXX3b5/5nHe4U0ZCCBCmMA9GQCYBGfxAFHHAVlu1dehga62d/Pq1
      Wm3tYKu2WvVTa7+22qpVEESQoUwCAcKYAEkgIROZb+6973Dms/f3x7lrv/uce957byAgBNfz
      5Ml9p3P22Xvttdf6rYnt2LFDaJoGlYQQhb81TYMQAowxVJHjOChfI8syAICu60iSBHEcy99z
      zqFpGizLgmEY8j6MMURRBCEEOOcwTRNJkoBzDsYYGGPye/S/YRiwLAu+708Zu67rcBxnyniT
      JEGSJAAgr6XrOtI0la+JaMx0f9u2+85DP4qiSM7HC6Xy8xPRc5bX4ZVOQghEUYQ0TdHpdGCa
      JlzXlZ8B+doEQQDLsqDreuG3jDGEYQjLsgrzRX8bmqZB1/XChAohChNNG6D8YyLOOYCc4Tjn
      yLJMMi1tjizLpgyAcw7OuWR4TdPAGINlWYjjGJZlIU1TmKY55YHp+5qmwXVdZFmGNE3ld2hM
      hmHAtu3CeFutlpyoer2OLMugaRo6nc6UySeGovmg+812E2RZhiiKYBiGnE91LveVqtbB87zn
      tTFfCRTHMaIogu/7aDabhQ1Oc0F8o/6dZRl0XZf8FIYharVaQaABgEEXK0+eekGV8dQFpNdp
      mhZeq9egnaluLpWp4jiW382yDEKIwmYxDGOK9FSvkWUZgiCYwlQ0EVEUTdkAdCpZlgXTNGFZ
      VuGexOw0Jvqbc44wDGGapmTomYjmhgTCdFSW6lXzrgolADBN84BlfiA/PRljSNNUPnN5Dkjg
      pmkKwzDkiU5EAq5qjjSSvgCg/q0yA5Azoud5sCxrymlRluzq6zRNpwxefQgidbHpu0EQyBOi
      SvLRe0EQFKS/en86PVTyPA+Dg4Oo1+tyHKQSOY4jJ69qUwFAu91GHMeSuaejqlO1TGXmpvuW
      n5kWUZWCBzLzk+pcVsPVOaA5onUmrUDlmyiK4HkeGGMwTbMwfwWFseoUsG0btVoNzWYTlmWB
      VCbDMKQaUvVbdVHTNJU7tIoJZlpAeqjyhikfgeo9aexVNgBjTB6PdK0wDCGEgG3baDQa8tTS
      db1wffp+t9tFp9OZUZ0hCV11jTLRSVe2O/qRYRiVG3w6mk4Fo89eiIq2v4hzjm63K+e6Xq9D
      13Q4/+WgeVYT9bfXYWw25Bo5joMkSQpCsEqINxoNOI4jVXOtvJvIsHRdFwMDA6jX61LKEMM3
      m025qFVUZnLajVXfL0u8KkNFfa0ykfqAhmGgXq9D0zR5WtGun2miO51O4RTUdV0aWgAKNog6
      xtlIX845oiiq/Kz8HOWTR93U5c1Pz7gv0p/UVQIa1PfpdavVklL350lJkkiBkCRJrnauN+D+
      iQv9KR3mbSbcP3PlHIVhKNWfMlBg2zbiOJZrTSBIo9Ho2QBAbyHomFCNN9J7aZFId68i27YL
      u7F8ffW1rutSFycVzPf9yoWdbnOkaQrHceB5nhzDbJiDjGe6JuccExMTBSas1WoIw1CeErSZ
      Lcua8frlTTvdXFS9T+/RPTnnsCxLqm+zJbK3CFHhnEPXdWRZhiRJ5D2yLEO325XG48+DSCVl
      jGHv3r1oNpsAANZhgCJL2J7enFmWhVarhVqtNkVQOY6DVqsF27Yl0scYQ7vdRqUID8MQ3W4X
      YRgiy7LCzgrDUKoy/aSEpmloNBqFB+r3oMT0SZLI+840OfRg6gJZloUgCBDHsYRWZ0NlNaLd
      biPLMvnPNE0wxqS0VaXKbCBHTdMq1bDZEp3QJHwGBgbQaDSel96vwrH0fGRn0WuiMAylXfRS
      kwqOqOuTHpsiuSqBcAT4XI7oo5HcyPV6HQsWLJCIpnotAJUCmXMOg9CJqsUk/ZUMCYKTVESj
      fNzQJrEsC7VaDd1uV+rvNFhVT1cftqwKTWdsk7QilMi2bbRaLWiahjRNCyhAeXLb7bbU7aMo
      kioa2ThhGALImY9QH9u24boufN+HbdvypJkNkX46G6O5TIwxDAwMFF4/X3JdV8K9aZoiSRLY
      j9iwP29DOALhH4dIl+ZjTNNUPvtLTf34IDMy+J/3oX9Eh6gLpAel0LWc+Wm9kyRBu90uXI8Q
      P6A4f7qu5ypQPwlN+qthGDAMA61WqxLOUwdKr9vttsRd1U1GG6HfpiO1iCBRek/dNPSeajSq
      UCXpebVabco9ut2uZEbS+8uQIp1IdC/f96FpmlSr9pUJSYXc1w3AGNsnn8NM1wJ6pwDnHGbX
      hPshF/qGnHm0TRo6t3YK89IPuXqxiBxeQggJoauU6Rn4UZM8KFA4iUkolg3hMsRNn03Co1pf
      aUlHZLvdRqfTmYLHly9aNmi73e4UGJN0WRWqIj27Xq+j0WhIuJVISoDJhyurX47jTHnwJEnk
      hlVJfU3PTs9PUk89RmnDttttcM5h2/bz0o3LyNNsiIzd/UVktxDCxUIGbacCCW7q/U1AwEvJ
      /KT7k6BQTyB1vVU+UAWSunlUgew4jgQiygLM6IfAVA2un85bVleIppMkZT2NdH+S/owxDA0N
      gXMujTf1/ipyoho35YkiBIF+W6vVEEURdF0vTG6n05HoR9VzkDpUq9X6ztF0RNBxP0SoikhQ
      7C+ijU6e9mw4Q/L2BOZ3TEAD4g/kqijBxy9lWAWtAdkdcRwXnFfqmqiQOI2RTv4qoQz0NoHj
      OAUe6esJVklVe8o6eb/flSE+FWVQpVp5tyZJIk+HdrtdUJ3Ue1mWJY8/IYREjsgb2Gg04Ps+
      Op0OLMuSRnk/yeY4jownKs8H/R3HsdSj95UMw5gWOasiChXZ34xIQiFlKfy/8WFcbQA2gFMA
      z/VecvSH4FmV+cnmrOIxFa0k9JC0DfVz9ZRI01RC24W13bVrlyCp208VUi/MGEO9XpeDnOmI
      JLVJ3anqfXRdR61Wg+/7hQC16ciyLHieV7gmwZm+76PRaMiJIWlvWZYMZQByKVcOnMqyDK1W
      S75H0K+6MWq12vNCdeh4L8cbTUeu68JxnP2ihpBdVn6vrC/3G8eLaQyTXUbq5vj4OAYHB6d9
      bpobILfRaF31QId1swVoQHJxgtTO1akgCJBlWQGdBCZVoJnUn7LbmaDGfioD0Dtuy2pJ2elW
      q9UKkZjqfcq/pc/LUpFUBYILTdOUeqLKQHSaVPkIiAFIGACQIRye50nVpRxXNFtirBe5OpuT
      gLDt/amDc55h99ZnYc89HAMOAyAwvnMzNu2JcNyxR2D3xnXY3uY49thjEO3dii1jKY496rA+
      1+qdTs/3hCKhRRG/Za1Bfa1qIc1mUwo43/fl2mhcQ+0jNZjX5ps1flsM/6s+UpFKBC8IArlx
      JAqk3rQfqehNHMdyEUnVUC3tWq0mj9EgCOTuVIm+GwTBFKaqYk66t+u6fY9oMmjJGKLJUjcA
      oTxVpx2dRuSCJ6+p4zhoNBqVz7EvREboTBuABMP+Vn2C1m5se/IedJYdirMP0cHDNlY88iTm
      jzSwcjXHEGLw8e1Y+RTD6JOrMOQxrGrMweuOLNo9cRwjeSIBW8nAX8dhH2Xv8wlBDk/V16Cu
      Uz+1h5ymwNRgSi3SYNzSU6/Nm0ywhMGpO5Uajuu6PUfYTAZwPxQjiiI0m000Gg0pXS3LQhRF
      mJiYQBAEhYcuGyeqWkCbrIzc0CnleR5c1+2rqqn3IVVNtSfI0BobG8P4+Di63S6CIMDY2Jhc
      CMMwpLNJ9QskSQLXdaeMbV+JHFrTORIJcNjfCIw3MB8nH3ekfM0ME9zfg8eeeAabtm5HUw/x
      yLodWDQPGFz4Gpx3wSnY/dx44RqccyS3J/DO8eB90IN3tofo4WjW80Kqpu/7BQ2iDJBU8Qpj
      bIr/pfA7SyA7pYdUZqdlMD0T9XodhmEUIpPphJXbpd9iVCE36neJYdWdGQRBgfHpIcvQp/pZ
      1fGnJsKQ0TsbIuNIVZkIWlMhVcLDNU1Du92WtgOQnwbNZlP6BGhsL1QqUz4BwXXl5ybqtx77
      k5hu4w2XvxMTWx/Dqu02rIMPxzsusnDvsxNI93axfYOB2tDxhd+kaQrjJgOsOxkuP67BuNVA
      dmo267mhsBJN06B1NLh/70JboyF5R4LwyrAwF2ocGTkv5fgVngIAbnD4X/Zh/5sNwQTS96Ww
      3ZxnWq0WhoeHCzycJEkxFqhK31b/JkYVQsjB1Gq1QqhEHMeFWJ7ywqoQVtnTV7Yn1EjTfcGk
      y9/TdV0aPwSZlu9BSMLAwMCUMdDG63a7hXDp50u0Qavc8+qY9ze1dz2L625aha61CfUj5iM+
      6HjYWx7G0y0HV1x8AlbeeTOe3Stw8RsvRaf+EO7bkuKyS4YK19A0DfEJMYQuwDIGYQpkx2Uw
      tdmrQKpgc77owPpHCwwMxl0GsqMzOEsddLtduWa0HuVTsYwQCiGAQwHxmVx9pfCV0dFR2LaN
      wcFBmVwD5IKa7dy5U6gGKxEdVWW1hxbMdd0CkpJlGdrtdsGYrWLYKu9uGYlQdz1ttnI20PMl
      Op36Gdp0klUZyv2k9fMhzrl01KlSDOiF7e5PFUgIUUC42u0JeLUmdG3me3ieV9Dxg4kA+DdA
      v0dHemEK7Zc0OLXZIWOERsVxnMfwvK8O80eTOj0T8L/tY/zccWRZJn0utEYqnE1E/hsiEnYU
      gpOmKVqtFhYsWCAN5zAMEQRBDpqUB0dEOn9ZQpEBGYahhBhVb+90R3kZxVE3AAU0VSXBzDbw
      bDZUhTCoFMex9EVUZRftL6KAQZpP1Wv9YtwPQIF5yow0HRGOLqNmbYb0fSniX8mZWNN78VNq
      Ykq/DazC1/HVMYzbDaAD8GM50telEjErr5Hq2Ox3cmZZhrGxMTnmOI7heV7hdFdj2go2QNWA
      y7q6elrQTcrfL+vxpL+VvXeqikMPrfoNVIfH/iK6VpWKR2NW7QSgx5CksuwveFINw6jX6xIM
      eDGyvKbD+WdDlNtc9b4aIqOqlFVhHLTOJDjjS2LwWzi0LRqS0xLwBoee6FNSWUkz6HQ6aDab
      eSDfZLKWGsBIHndVaHa7Xem3KqueBjAVV1cZWJWAqsRetWoVHMfBsmXLJObOGIP9HRvWv1rg
      SzmCzwQQQ7kqs3PnTtTr9UJYMf2Gcw7XdeXA+m26/UEzMYIqbcoOrzAMpQTZ30RqHql+Lz/i
      WHXPrVi5biMWHXMGDnVGcffDm3D6hW+Etu0R3Ld2G8655K04aenMTjPTNHP9e5IPkiMSiKWT
      /CAYxsfHMTIy0leFjuNYrg1jeeEFCnfJsgyxHyNMQtg1WwY9EnxPkp/IoItU6fn0flm92bJl
      Cw455BCMjIzA931s2rQJ9XodS8aXwP24CxYyYCUAD8i+nOGhhx7C+Pg4Tj75ZGzatAkTExM4
      6aSTCtKeUIGygby/iaC3snd7JlJTOsk3sD/phUroF580HP+6C7H4yOfwxMZtWLNuJ059zSk4
      eK6H2+7dhdecthwLh6eGGlRR2fhXUcIoiuC6LlzXhWEYMhxGvWb5hCSBEUURxLcFvD/3AA0I
      /yJE9/JuIdhxCtCiWtIq0U3LG4CYh46wMAzhOA527NgBtpsBSg4F28ak1Dz00EOlc4mCntSB
      lI9S9V4UIfhCoUHOuTSAywa3mhJJEJm6WVRYl9zqrzbas/kpPLm1jde+5ngwYYAnLdx+1wNg
      TEca78Xtdz46q+sQRK1C4oQoCiFkvoWaikvrUhWkR/ZoNBbB+XMH2jYN2lYNzp85MPnUkjoq
      VXqCVQOUVCD1AosXL8bjjz8uQ5fjOEaj0UB2XIb0vBTGzwyIpkD4gZz5KVaj2Wyi3W7LOA6K
      s1EdP2UViNALxvLo0BcqJWnjqhtbfU1E3u56vS49wvT8dArsS1LMK55EhntvvxM7MwutIMaR
      Rw5jxeNrcciJZ2PuQIKVq57GUaddOKtLqcKVmJ8cqQMDA1IYkl5P60QhEIVhTQorXdfBwABV
      LmXFe1YFdcpgOPWCqh5aJXVp0FUMiy5grDHA53Bkh2QFlEcdgOd58rUaSlGVcEOva7Xa847F
      UZ+v3W5PSfcrb4B+v6Uxmqa536DZVwJFUTSrUJDpQlVUoqoPpMOTwUzwcPmEpc1RZmDSKnRd
      RxiEwLcA5zMOwIDwz0KE7wwL9yz/fgoMWgUTqsdU+fvq/wCAGpCeNgmXoXczVcUAIJ0RKhLE
      OZcxNyq6RL8ly/+F2AeM5e708fHxgopX3nj0N/k1VFSKNnOapj+3xPGXmijvQiUyMFVmpXWd
      aV7KeeMUGEe/q7JDyZAFekGJaZqi2+3CMiywrzDYX7EhDhbwv+Bj78F7URe92k9VwkorP4Ba
      CU0dSE4Cu7c8g12tSH4nCVp4ev0WCDBM7NqEn93zADpxzkxpMIF777oN9z2yBpwJPP3YA3hs
      7WZkWYRn1q1FlPWqepHuV84VUCchSRJ0u120222ZsP98SMX4q3RD9dnVukBlu+GFBse9ksgw
      DFlPh/5RXJaqo+9r/gLZV91uV6qZsmbPpG2qOkVVVFAIIe2x7LEMzqccaM9q0B/SYX/BRsaz
      KTkCZSrUBVINYtVQJEqjNnZuWI21Oyg+XmDrps14Zv06cO7jnntXY96AgRUPrQIA7N6yCak9
      jCWL5mHXqvvwtG9jzoCHPVs3YuOm9ZhQ+IexPG9WTb0s64qkF9KuHx8fl6VKZiLybFddtx8C
      008Q0Pv7M13xlUgUJaDOnWmas4atOecINgXQ36ujdnYN5ldMRGEkIwxUHiQeVQsqE0AihMhL
      piharTaWx1zNVGVEKxucZYmoLrxhN3HCcUdBk+5zhsOXnYA5TQdgNobdEHfe/yiGhuYAAFLu
      48kHV2L1ui1Yt3MUrfWP4cFV6zC8+GgcMq8pr0v37Xa7hdxeYGr+Z5lIcky3CUhSqGoYbQYK
      5qtS/8rzUTaYKY791UzlMI59sdGSJIHxtwas71nQV+lw/tRBtiIroH7kLFQToIiyLJNRvVkj
      gxjK14rP5Qg/mgMw3W4Xvu8XUESVV7TyIqvG7UzHR/FpOtgRD+KXrroEmzdtAADUhg7Guz/w
      PvBta+HVmzjxgjehKUbRCaaqLqokKWO8ZSldZsput4uJiYlpN4KqXqmQZlm/r7qH+pl6WlKc
      yasREiUqV9Erx+ZMR0KIQlI+MgC7cqFGjq1arYaBgYHK01bXdQwNDWHAGEDtozV5LX4MR2d5
      B77vY86cOYjjWIbAl0k6wqoGV6a4uwvXXrcCHd2EM3YkfHcBartXY9Wzu7Ar8XD6smH86Kb7
      8YY3vgHXXv9TXHreyfjJNf+FQ5dfhFOXjuCuG6+DfdDJmHh6Be5+eC30ZyP86psv6LvBqqS+
      alCrjKnWj6fJocA20hspCYM2iurbKN9HfY/qoFZJe4ptt227EIJ9IFOapmi3273chl0C5qiJ
      bFEGbvNCPu90ZJomwg+G0B/QwXYzZGdmyM7LJOOryGAVAEPCr9FtQF+tpNk+rsu8FCGERI9G
      R0en+rsoGrSKAcqkfi8MOtDNGkyj4iGzCO2IoeHNjJCUdfN+sGv5wQFI13c5jIM+V6MHyYDu
      J63Lkl+d9FqtVjD01NqZqp5KNVV/HsWkXkpqtVrYvHkzFi5cCOsxC94HPGjbNKTnpuj+vy64
      xQu5Ff2IIMxofQSxS0A7RoPW6PWIKMPxZP8RUiiRxFjLo0p/OpkK+Z4Y3S92C2vJGMPu3bsx
      MjJSsFHYrl27RFXkXpkRq4zismFYfq3efLaSkQKZ1PouM91TZVZ1HK7rSmcVqStCCJk3XJW3
      UPUMpmkWCtESJq5CpzRWtT7pgUZpmuae9EAg25kBTaD2xzVY/zUJXTIB/z99RBflKGGj0ZgV
      UBBFkfQJULMTComgFNI4jguCkry/wCSkKhqwfmoBLhCdH0FPdFjXWkACxFfGyEYy6ZAdHh6W
      955WBSonnqvMUZbEZbiKPiuXQel3H+oGQ57XfuOayVBV/1d9CVTdTgiBer1e6RTpd08qt9do
      NKbYD+rzc86lerWvlZtfCcQ5R+ZnqL2vBuMOA/wIDjFHEZQMEAM9tTJJkr5rr86XGrBGkQH0
      d6vVqmxGQtEEtPZdv4vwTaFMY/Xe78nkeONmA91vd+F5HsIwxNjYmKw6Yahx1/0GqkpVNbm4
      SmqWDdSqZhNlhqMyJ3QvwzAkujATE6n3KN+fMGY1NJZsharwh37Xp99R+Q4aU1XbJ0KcKPXx
      QCLGGMzbTBg3GmBg0FfpSP5XguTyBPoTOuKrY2TLMtjftwEOpJelyA7qqaicc0QTEbJOBl7j
      CJJAojzqd1S+otZIcgwZg/s5F+a1JrLlGYJPBUgHU1kb1rIsMMFg3NrbeMZ9eQpn7MVTHLIG
      7a5yTfgq47C8Gcrvl79TNhrL3yEiAzOO40IZ9pkKQ5UTZ8pjUjctOb+o7nx5085GWpcbMJRL
      vBAdqOERmqYBpcJ4/HCO5LP5vGRJBu8DHqwf5ipRcnmC1jdbsOt5pbnwiRD2h2zoj+tIL0oR
      fyGG1ig2WFE1iDJ0yRiDdbcF528ny5qs08EXc/A/5DLDTAgBDo70/BTm9fkJkL02g/B6ecWD
      g4Nyo2lkcavx1f304ukYhVQZkrzqa5VZAEzZhdSwgBAVIURlNd8yEbpDE0f3Un0aVCkOwJSj
      dF9UFPU5VOHQz76Z6WR5JVKWZUjOShB/KAafw5G8IUH6W6ksOoYU0hAFAON2A1qoSZTO+KYB
      Y4UB5jOYPzJRuzNPZjGeNVB/dx2Nyxqwb7OhsZ4hPEWIjpZQwckeAZ1OR9aIjZMY3X/oIvjr
      AMGnA3S/khvmFEWwa9cu6T+QNoDqDKL/VUYmXb6qZEmZqapw9cpIPOV3VLqO8jUdx5FevCoj
      WN2c03mvCf1xHGdKKDSdUv2KeJXvNRs3v1qg60AjIQRgAOnfp0g+l0dgurYrU0gzI0N6Rgrz
      tknJe1oGzcuLCkRhBH1n0UMsjHwtvN/3YNyZz5e2QUN2e4Z0fs9+UzuFJpcmSM9MoT+kgy/h
      iH81lsGJo6OjMkPM13wkb+mpq/pYfu9DDjlEXnf79u298uhVye8qo1TlDABTmbkMPfVDh8pE
      KhghQITjliFHukaZeelzNWZEvXa/bDOVodVNpL5X9Xn5O3SS6rouo00PtEA5tTK2+vzUZTNN
      U/j/5MP+tg1kQPzLMTI99+zyBzic63pJROm5KZILJsvNbFMEaIvJkitCCGms0ppntQyd73ag
      b9HB53FkwxkEz/MEKHy9rAmQZ7nck1oWxqIYG3JelGFR9dgvPzzdrJxhpb4/nb6sEsFalBtc
      dj6V70vGE92j3O9YJZoMtYcxvT/dPdR/qkGvFm5iLK/kZpqm3LAHmgFMVLX5ZfXuCQ0sZoh+
      OwL+HHCPzvvMxXEMbaUGFihzO8Fg/o8JJED0kQiiKSBsgeTtCfwFPsbHx6Ft0DB4xSCGlg3B
      /WsXyCbtxRpHckyCbLgHi5J2Ul5XxphMsHFMB8Z2A+YuE0ywfHN1Oh1Rq9UQx7EsCWhZVsFY
      rEJZ1NfEhGU9vx+jT2dHmKZZiM8hw6XcBlUIISMSJyYmJCJThm/L159pLFUngNqdXDaXmBwn
      CQdC08jdrpaHPJCJsgL54xzur7vQ1mtIz0oRfyeGO8dFHMcIggDGWgP1S+pgLWVuDYHgnwLE
      74ihr9fBugzpsSl2ju1Es9nEyMdHYH1n0sdgCbSub6G1rIXBjYPQdmtIzkjAHS5zCEgI0bhI
      Q2CMARxw/9mF83kHwhCI/neE8FfCXmlE0zRlKUFKOqYiUNPpxfRe2fisMqarflcm2njEaEmS
      SMdSlSqlJuQDUwv5Tqd+qRuNXpfHRIFYBNdRVQHf9+VrOlrJOUYhF+UaRAcikYAy/8WE/oQO
      FuZQKbuRodPpSKGaHJmgc1MH8Tt7cUIsZXn2IBNIliaIT4zBDY7h4eG88rivrBcH9ETHyI9G
      UL+oDu8dHmrvqUF08nAIteQk0NMQpA3Q1uF8wQEbZ9D2aLA/a+fFuORgGJNZTp1OB0EQIEmS
      guMH6K/ClPXnqu/sq1eYpO/OnTvlw6jGJVWprtVqsrsLqTMz2SxVunw5spHi0tUQCtd10Ww2
      CwXA6NmoXDyhT+Qz2d8J9C83YoyBN0rgSEMU54gBydEJxB8KmDeaYK28qlxy3tTqeFQjKvzt
      ENpqDdo2DcmbE6TLU9Q/WQeLJmO0fmbAfsbG9nnbMTw8XFnZRN5fB4QnwMaYHB9QyggDcibw
      PA/btm2DEALDw8Oz6m1FOlfZflBVIZU5C4PrQ3Q96srebrdlojQVyu12u7KJN5Xano3RXYUi
      qd81DKNQDIp+Q//UOBfVtlC/R89wIBrEKhmGge6HutCf1qE/pCO5MkF8dk/Sq+uRLEnQ+VEH
      5m0mshMzROdFYCKv7Cx0AW7mc2gEBqwfWmAhQ/LmBJ3PdtCNuvCWennFEeRe53QoLcDvJIC6
      nS7m3DMHzj844CMc4WdCBH8TwPm0A5jIS/Yw0bMBVBIiT0Sn+vjTOY3Ku7eM+tB7/X5bNq6r
      mFf9nAomEROSDUBSI8uyQhxReZxV9+in1qnvEbRJjf/K80XeZVUNpM1FsUQHqoNMiLxIAOVH
      UJahBA8mdOibdGQHZwXDVd+tw/qWBf1xHcbdBvgSDv+rPoIjAzT+vQH34z0gofvNLnZfsBtz
      7p+D+tV1AEByWYLOv3awe+9uAJB9IQzDwGBnEM0LmtB2T0YAnJeic22vOQmtVSVYzRiT0FZV
      6HE/Uneh+t0qdYM+V1Wnfrqy+rtmszmlZy/pjGNjY5VFdPvdY7pn2rNnDxjLg9sodqjqJKTr
      0cag11T4qd/vDiSieaKO7BTYxhiDscNA7eoatDUa+FKO7re7yA6bVCf/wIV5Xe8k1VfrsD9v
      I/5aDLajuCbaTg2Dg4NwvtZTJ407DGhrNAwcOSBD0aXOv1vPs8RojDumon6MsepG2QBkIwn6
      YhXNBlUpv9fvN7OxC+h7ZJtMTEyg3W7LVq71el1miJFDimhfpG+73cbQ0BBGRh5nJy0AACAA
      SURBVEYKNgFJespHFkLIxtp0DNN9SUXbn22OXu5Ep7JqfJrXmNBX6WAJg75Gh/U9S/KAfl//
      llxqnX8A0B/TYd5sFsueAPKEZZzB/TsXA4cNoHFuA4iA+F0xhCMghgSi34t632W9jqPTuiur
      VJeZVB5V2pfx9X6QYzmmvx8JIQo5wLQZ0jSViNXQ0BD27t0LTdOk5KYuNbO9BzlUys9L0lyF
      fZMkkRuwau7U+p+vBqJqDwQHi/kl2Hx+L7gwuSKB/c08hVIYAvwYjuhjef1OY2VxPq3vWjCv
      NRH9XgS2nUHbpSH6cIT0qPx0NZ40YH/BBgsY9HEdzt858L/hI3pvBNQAcZhAvVaXQmpiYiI/
      oaZ7mCp9nYgYgBhC1ZWn06lVVURlkqp7zIYo6pKQliAIMDAwIGFI6j/MWC/gT93M5faqpEYR
      UWNptR2rWiSWfBG/oB6pkZ3xZTG0j2kwbzaRnpcienskeafzqQ7S89Mc/z8vhf6ADvPG3DmW
      HZ/JHgRELGLQV+rwv+uDz+FgbQatpYEPcrAkx/olRXnDjI31jRgYGMAib1GhTawsr1NlBAM5
      xFjuKqgSMVJZ559OXaLvq6jLbJh+OlSHaukDvVQ9cqFPTEzIriDlDo1k6KuVDQh2LXeXAXLb
      w/d9OX5Kt6yKVX+1kxACY2NjBVSQ5reAlK1hsEYtpKekMG8w4f62C5YyiKZAclkCMSKgbdZg
      3NbrSAMA2UkZ0uUprO9aEE2B4B8CJOcncP/UhfUdC3weR/C1APGpsVxT8nERyfKc/TaAmnJW
      dm6V1QIVHqTvl5mCvkfeuX5IUb8Jnc6QpnhxSlA3TVMew67ryiQV8iPYto3R0VGZd6DeQ4Vo
      qTEEY0w2/6DGIAcqojNbqjrlieI4lsKmrDUQOTc68H7TA3wgOz2DGBYwf1xMoUxPS+H/xIe2
      SoP3Lk8iOoJN3ltMOkNPzdC6tQWWMWjjGlIjRQt5v4Vms1lZaZpQqr4qUDlkWb2AugmqYnyq
      dH16v5y6qNoK/WyEqs/UsdA11NAJ8kASkmVZlnRoUV3PcrVg9RTwPK+g15PEf7UYtP2IbCRq
      jgJAChKaS5p7PdRh/6sN/Wkd8VtjxGfHvfo+/2qBtSdV4Pt1JFcleXRo2ptbfa0OjWswzjKQ
      vDWB/bXcXiDGl2PyBIxnDFjfsgAHSH41QePghrTZqtZLjr3fg6qN4egoqwoaK2+EKqo6OdRr
      91OdZgu9quhLlmVS1w/DUDZMIHuFfAhqfmn5/zLzAzjgvbmzJQoDIfsJQKEcDWN5CISmaZjz
      tTmw/9LOM7R+ZAC3A+4Jefg0P5RDQOTlM10g/kiM9E0prG9YMjQ6uSKB3shtr+BTAcJmCPtz
      ttwAQhfgx3GEfxTC/bAL4+HJkOpVGjrf60iIfDrqy7VVbuWq0GH1dT9SY22q3u/3+9nE0KhO
      JzWWJwxD6RMg24AK8qoZYVX3eLWrN/1IwpfbdJhrTWhJdQHler2eh4Y/pEtmZS0Gtjb/27Is
      pJ9Mkbw/QXp+Cv9LPnAygDcDfJ7CIzEg+GRZ9LkO0itTQKk3kF6QYu+te5EdmUF/qoe0GSsN
      if71ew6KN+u70tSHqSqtsUoyEwZMLn+15icRGZyqTk8DIgmuvlcVnEZEjEx9o6jyG42PmF0N
      YlPVOvXZ+nmGf0FFyrIMyQ0J6hfUUb+gDu8jHrQkXzNzpwn3ehfGRqVs4ZsSCH1S0CwWwGt7
      CUPuQS7EPwskNyTA2yYLDgcc5k96doB5k4mklchoX+NEA9FHI4j6pNaxW4PzpAMxJJCe33M2
      Jm9JpK+m3NYpSRK0Wi20Wq0cCp3JCC7bAFWYv+ryD8NQ5mdSlQcKH96xYwfq9brM5ld9ADp0
      6HfoMFYYyM7JsOPoHbDc3GkyNDRU0OVarRYGBwd7mUiKI0q1BWghgOr2rOrYNU2D4zj7rf/X
      gUhBEMC81IRx12RiiSXQvb4LMSJQe2Mtb5DSBLrf7SJaHkFjGsyHTOjrdfCLOJxDp7aYpTCK
      LMvAUgbrMgvGPfn109el6FzTQaZn0tucRRm8szwp8bOjMrSvbQMDgHVrbgOE54bY29mLOXPm
      FNad/DYq9bUByjpyFalMRGoFwV+UHLJ161bEcYxly5YhjmM88cQTqNVqOPjgg7F161YMDQ2h
      0Whg8P5BeL/sgYUM4ksC838wH+mZKW677TYsW7YM9XodW7duxcKFC7Fy5UqceOKJ4JxjbGwM
      hx12GDZs2JDjvYsWTUlWKRu56uQDvTagv1B9pifGGPgcRSOwANEUMG41JEKDFmDeYCI5PQ9K
      tF9vg51fDE0uE4WN1Ot1RF+JkH095730AymcZi81Nssy8JRDe663Tvo6HY0rG/D/rw/29jyE
      x+QmYPVywMkmVIuiGVsM6Ov0/ioQSWlV169Sh8rwZFl9yLIMCxYsQKfTwZ49ezAyMoLDDz8c
      W7duha7r2LNnD7Zv3w79vjyWHEDuzVuRt2KdM2cOlixZIk+VPXv2YP78+Vi8eDHWr18PwzAw
      Pj4u8wjKDE+ngprzXFa9VDj0F9SfLMtC/OkYyUUJsmUZgr8MkB6VIjsmgzAmT1dNIDs2F4bU
      +MIwDKkZlEmF0HVdh3ucC/Y5BvY5Bve4HHImr7znebDrNuL3xxCWolqv1WF/3ZYIIK0vNcUr
      86T1oJXnFFzt9T8BSC0oG7vqoKtgyoGBAaxevRqapuH444+XdSKpiGqj0cDGjRsxd+5cjI2N
      YdGiRXkbyzNj2G7uyhaeQHx6nklUr9exefNmtFqtQpzJli1bsHDhQpimieHhYYRhiPHx8ULS
      c9Vkq//TmF5NoQovhDRNAw4But/rykwwW9hIzkoQ/GMA8xYT6Zkp4itjKVxorqdTLalSH/FV
      OXTcsiz4vi8TtcK/CBEsC+B+2O0hQo0ij5IGAkz1VZnXmPLE6msDEN5bVV99OicI3RAohjio
      ubuU5U9hFACgCQ3GfQaM+w2kZ6VIX5tKh0dVrBAZuNQep5xrUBW6oUp/2txDQ0OVz/ALqiYy
      IoMgkHU6galQN2Ns1mmh5bUqC12Kt2o0GvIeYTeE9mcazO+ZyE7IEHwugHGYIbMHu92ubNCo
      2ogA4H7ThfNHDphg/TcADYSqKdNrerjpwhNUqpqYqgcuX6eMElXdt/z72dyDPieP8AvtOfZq
      pNHRUbTb7ULN1DKiptZlnQ2V107N86ZQ63JuOjnkyPuv9hrLskxG6tJ1ibRQg/MVB/oKfeZg
      OIrx7ue1nQkyVI8e9b3yd6p+N9PfdP+ybdLvHuVNdSBnab1YRLq9pmnQ1+twP+2CtRnC3w8R
      nxmDMVYITiSizDghRKHqB/EUBRxSBxjXdRE/Eef1f17HwY8qlsAh3gTyuB61cwyQn/C2bVf6
      ArjDEXwsf3/G6k1kxBB8VIYTq9Igy/TNf/w0UDscl1xxEe66/gdohQ6u+rX3Yq4FPH7vzXho
      7VYMH3IcDrHG8OjTmzH36DNx+dknorv3Ofzsx/+JxgUfx9zdd+Ouh57C1tEYV553HFY+tRGN
      BUfibZeeJe9dFVLRz9lW1TT5FzQzkWrDGIP1EQvGipyFvKc94C7AW9IrCpxlmVSVymUsSVU1
      NhnwftOD/qSO+N0xks8mYDWG9M4U9avqYB0GPsjh3+hDf60+RRWmk6H8PtkShmHIlNparYZg
      IgA2AqImYBxizLwBgPw4K5clof/LpQKnUozQ5zj85KNhZXtx7GvejEMHt2DNxhbmHj2Apccc
      iw1bxzF33jycfMLpGJn7KPawPLitNrwIF73+DKwAcOQp52DhIYfg8Y0hdH8DbK+BLc88gxhn
      QZ/BJimPTfUX/IKeHwkhoG1VogX2Mohuzy/U7XYr2xKV18H5R0duIutrFvzLfSTnJzBuMmRG
      lzauwbjVyCvNVaB1VBMojuMCEkSqrqza0Qph/64N84cmxIBA8NWgPwyqEpUGKXtPVbVIhUwL
      8CkH3vmB38FRxnO4f6OPIPIRtH3Yrg0IAc0bxusvPBu7tm7Es088gJZ9EE4+eknlONY9uQ5H
      HXskjjnzQlzxxgux6KAhmOgfNFfltCN6NfX4fTHINE1EvxlB1HoFrdJ5KXbt2oVt27bJ/GCV
      F6rWCKqjVgCIJxufTOYDAIAwBbLjp0+aomtSaU0VhaJNyR/iMP/bBAsYtB0anE86szsBKMyh
      Xq/LmPiyQUqq0JQKCzzG/bffhD2hicuuOAqP3vFj3BEP4/Lzd+He1Snssafw+IbdOOqU07Hm
      sfuwLVyNbXvOhBeN4tgjF+KG61dgl7MNR7z9YrD6YsxxNUxsexbX3nwvjjrtAjAUVTE5l8rY
      yt7ARqMxrWOmioToJc/s628PRKIN0Dm3AxYypCekgAmYwkS32y30R1BDT8rF04IPB9Af16Ft
      1JBcnoCdl/NadlWGsBtCv0dHemEK/aLpM+tI5eln1zHGIGoCMCE3nfaUNj0KVEVkfatdF8uf
      yxsqYQZlmti7E7AGMVCvQGFEgM1bOzhk8dwZx0NSRh1LGQql/23blgFy+8LAWZYh3BxCu0aD
      mCfALmdwBl69YdFJkkjHlhp2QozearUKXd3JwC2vEed5xeYBfQBakGd2OQ2n0ASbqjy8UKEj
      hEAcxuBf4bD+2YJYJMAP5vu+AYiCIJBhD3EcY2BgQH42HcozG71blRz9oM9+VAV/0glGlYP3
      hYQQ8Lf7sC+3YTwyqUv+QQj2afaqhFApspaoCmRot9syrqqK1DWipCtSsclxSoKKnKhVzK+m
      p5abrPe7L5XiT/0U3nu92dkAVUQJIlSbhyLsys0nAEi8VjWKZhpo2Xia7ffLRDhyOSVuX0is
      F4UuhOYN5quyNSoxqLHaQP2ddTTe0oC1wgJEbw1GR0clk5V/W7VGnufJqE01dIH6sLXb7SnN
      W4CeQy6KIkRRhE6nI73FVfei1+QvMP/HhPGTWaJAVUSGcRAEcN28CjANpJyFQ1UbfN+XNUdn
      otk62mb6Do3zhRBbzMAP59DX5psgPTt9VRrQlGFV/3Ad+pP5XHibPWR3ZgisAOPj41O6MKrU
      b42Ij+I4npLAQnVWgV6FjbJWQIFuvu+j0+lgcHBQqk0U5EgdJinM37jGKNYGfT6k5tu6rlvI
      Gqt6WDopOOdTKin0c1zNhqpik+i3L7RRBWMM9sE2gn8PYP6HCT6Pg7+fw7MPzE6QsyFtuwJ/
      jjIgBrpJV/ZHKFNVNABQzCakOq9VlGWZDMnRdV3WglWJ+I6camrwI/GlCmRY23L17AVxB6kX
      6u6a6fvNZhN79+6d0g2mLKXVySpPIBlejUajIInpCCXnxwutyqa25tSO0xD+RSjtiTAM5fde
      TUnyQghEvxvB/txkE4z3xgjcAA2zUc38gsG8x4Rxt4HsjAzxuTGEVh3a0i8mTRWOWZah1WpN
      +Z4aa1aGW8twrKZpiH4zgrb6eaBAVQMMggBRFKFWq8kakdMR6W9C5MV3qegtqUYqbqwar4T2
      UOU3cp1XURAEskTfwMDA8zoJyJkzE9Xr9QM+opRzLtXbNErhPOuAZQzpMSm41r8XhPWAhdpb
      a3mUry3gf9tHdH5UuC5jeSK9bdsFIVoOcJyOSFB1Op0CIEOkbjRynOkbZ4gFmg1R7Ac1Uaau
      6qqRWNbnTdOUMBmdCmNjYzJhHejp7moYLR1naqubfkStlhhj0/arnZ4yPHj7jdiS1PHWi8/B
      9//li2iJOs656CI8fMst2DW6FSe9+SO47LT687j2y48IwFCha8qlUEvEd4IO9KN7yAxDfxvN
      WGHIzjAsYjDuNRBfEEthRoKujPwBpQC2SIN1gwU2yhC/OUY6txiZ0K91b9XGpE2XHTpNTvC+
      EJUnJNy20WgUdrKqwtAkqgYNY3k20MTEhPx+vV4vbIgqmsk47tcCdvakY/m5F2LeYA53BmmG
      o098LQ47eDGu/rX34aRTzsYZR01fdeCVRKojE8gZZcuWLdizZw9arZYsJtWv1EgVpa9LIbxJ
      1dURSM9OC3FYqrcWmBoqQf/cz7rwPuDB/WMXtXfXoHf0ys2jag9aqsFaaeUJ/Ch6hYnH9ssG
      ME1TMqvv+8iyrFBapDCoUjAdkZpMT+rNCyE6aeiaJN2mg0ynJ443XHolRrLNuHv1LnS2rYO+
      8AjYB5AvjNaHCpfFcYxGowHLsmSJSSpBTmDGTJSclqD7gy7CPw3R/X4X8TnxPttLjDEYN/VO
      cH2VDn2bXnDAqd8FAC3RUPvdGmpvqqF+cR3OvxUdl+Sc2y+9PBnLIwRd15XVk+v1OjzPKxgs
      VUgAkRACtVoNY2NjYIxJ9eeFjImKX9ExHo/G4Gs52AIG6zBrFmUNI9zyg+/joY3PAbUG2qsf
      xfZuhAvfMoDNW7bg5KOPfN7jezkT5xzB7gB8DYcx10B3qFuorkCx/q1WC67rwrKs/kzNgPSM
      FOkZ6eRLBh29RCmiqhZHREKIvHbo0/nv+FEcfEEvmLEqBEbfpMP8kQkW5yiV9VUL0fuiggAM
      w/CFG8FlomoSzWYTuq4XEmrUAVZtANogaZpiZGRkv/TaJWRICzU4b3WgP6hDzBcI/iWAc/7U
      KgUqvRqNYCEE/FEf9ltt6PfrEPMEut/oIn5NMZ+XgiAnJiYghMDcuTOHrcxEhODRtVX1Ruto
      sP/Lzm2Ad8ZID+21oFJ5h8IwjJ0G6ufXoe2cbJBxQYr2f7cL2gdjL9APUEWUYB6GITzPk9gw
      OTNU0lIN+hYdoiaQzusZNfszT5dc6dH1EfR780JNbAuD+XUTydnJtPcpJ1n0owMJAuWcg93C
      oP9scq62MtjfsPMU1ZLqSLaAbdsY27YOP/npzxDAwQVnn4S7f3Y/QrOJ9159FWyD49Zr/gtb
      JnRc9JZLsOrm6/Hc6BhOvfRdeG7FT7BXeLj8yncAflfi/GUByescwa8HktGFEFPa4tKG4Zwj
      nZ/C/6oP5wsOxLBA8MmpzQqzLHtxNgA12vN9H7VaTdoHan6xlmrw/sCD+f3J2OwvBYjO7xWx
      3d+BZmKeQB46Ovl6wczJMDP5NQ5EEkKAz+V5zcBJIK9c418litsxGkuwZN5TGNUGsfDwo7D4
      qdVouwdB0wBEu7BpV4aRRfNQt+u49Kqrseq+u4BwDGNBiuFFC+CZAtbgoOz0Mzg4WECiVIYv
      k7qOpI4xxpCclyB9fSqfq4xW6boO/ROf+MQn93dqIBmg5BxTYSrK8zRXmXD+xAELGViHQXtO
      Q/xLsXyI58t8hDSFYSjjRLIsgzhIgNc4tN0a0jekSP53Amf41RvRWUUUgxPPjYFGXnktvSBF
      +IkQ3C0mENHfSZLk3YQyjjkHLcLY1nWw5hyKpYcdgk0bnsGSw5bC1EJs3pnh7OMHcM/acUxs
      XYOFx56BhV6K8cTBsQdbeGJjhAVzPPi+n3eInHSSRlGEIAhkvFA5+4t4i4SmugGm+ycrEe5v
      G2A64pxL9MB8xkT9DXVZITi5PEHn3/LmdrZtV3oFZ0PUJI+S3sMwlLmo9PD6ej0vrrQccOZN
      bwe8mojQHVWtUH0oVdG57XY79+NsXYMb73gA3shinHzEHNyz4hF4C47AmYd5aDWPBt+8AivX
      7cTrLjwHd/7nf4MNDuC1F10B/5kHsHaHjzf8ryvQ0ONCjzcqe8k5l0FzVK2QVGvGGDauXoG7
      H1mP48+4ECPxM7jxnrVYtvwcvP60Y5CFbdx4/Q/RNhfjrRefhB9f+2OwwaV408Un4yff++FL
      uwFIwvi+DyYY7H+3YX/JhjhIwP+8j/Sw/LjSdR3NZrOvdCZDmTBp6t5C3drJyUKTSAuXJAnY
      Txi8D3lAG8hOzhBdH8Gd30v5JCPsxVDDXu40NjYmfTEq0VqUDUggL1NJgEcVbdu6BXMPOhim
      NvNclpue03vdbleWXwEgHXOE5d92049xwvIzcf+DD+HwQcA57AwcNn8QlqFh9+ZHsam9AHP8
      R/GEP4wjD1+KaPujCMZC+EtO3v82AFE/9IQcYYIJxO+NEb83V3uEEFI/pxyDqkklJm+1WgXn
      GoVRqM6OcHUI4+sGmM6QfjCFdpgG899NsPFJb/MjOnA34J/tw/hnA9pzGsK3hnlD5YUM1pGz
      gUoPHLIsCwMDA1McSsYGA/a3bMACol+LkB40dW3LzQRpDebMm4/2+JgMR1fnstPpwPO8Kbq9
      ugnoMxJ0pL5Qs/IwDPG600/BXfc/iB17O1h+5JFY+eAdWOXMxdsuPQecc9iOCw8W2mMZPMsC
      ty3saE9g9JlHXrwN0C9jjB6qTGUmU4PNiCgAjuwIoqpgtGgigv0hG8b9+SPqj+roXtuFvljv
      1aW3AH4Qh/VXFuwv595e8z9NgANiRCD4RgDt0p5TTgiBOIoRd2MwjcH0zIJH+5VOFJBIBaU4
      5zAiA95veLJpnf6YjvYP2lMYlnMOXdPBskkkRusZruQzIIMZgIz/UiOIy9KfqF8DQqoot3XT
      auzYvhVHnnoBxvZswtjYOIYOWYT169ZhztyFePQH30agzcGVl70W11/3HejuArzl0tPww+tu
      f/FUoHa7jbi9C9+7aQXe9dbLwBhDa9cG3HDzz3D06W/AcPwc7l75JE48+xKctHQB0qiNO356
      I9q1Q3HRSQvwk5/ehYXLTsdrDvdwzXU34/DTLsSZxy+B53nodDqFanHUtqggXbZ0UDumBub3
      Suf5X/HhfsIF28wg5gqEnwmRXp3Cu8iD8cBUWZC8NUH27UxmfkXdCPgMYH/ehmgIpJelSC9O
      ob1Zg1N/5TfQEELIcAcifa+O5knNwjxObJ6QTNtqtXLpLjR4X/Bgf9kGX5g3vI6P7/kOyL6g
      05q6ekqcv5RWqdpsdI+yWjptyLuI8cgja3DSKSdAm0Y4vXgAthB44tFVGFecYCsfXI1L3vYu
      nHjYPAzMX4p3vuMK7Ni0HgCwff2jaBz1erzpvFOx7qmnsPzit8AYW4db7n4cl7ztXWhtfQpx
      ymWvLusxC/X31FH/tTrSx9Mpp40+oCO9WKkZ/6YEzp870DZrEg7L3pAvRnJldfQqX8jlAnS7
      XSTrEthftMFiBm1Ug/VvFtz3u8huzA6IDDHGmFQxgUmdvCGQXqDM45VJQfpTaIu5zsznZiLv
      B+z8pVNQeaiFLRW7VQsSG88ZqP1GDfV31mHda1XaX1UNW4jI0x9FkfybCwMnnXw8MHk69fv3
      oqlA/p51WL09hBGOY6wTY7hhY2x8O2747n/AGDkMbzpjKe66fwvOOedMAEA4PoaVa36KVXcL
      XHblpbjv1muxY6yFgUVHY8izYdkauBBI4whaV4P3YU+6xrUNGsKfhfBqvUoETsNB8PUAyVUJ
      YOSewPoZStQmz93ypmmC/w5H9/gu2HMMbDQvnsqXcaR/mMKzeiEZHdGRdgoRixn0B3Rkb85e
      1miSWpmNsqSqvPGqGqJpGrjO0f1aF+atecnx5Pyk2OmRjGOOwtwU2psqzis1FIH0ee/3vfz6
      APQndfDbONK5U+0MLdNg3WpBf0xH+oYU8WmK/QhICFUdlwYN+m4dSIFsQSZzEYhetA0AvYbF
      82q4b9MY2u0JtDsMy45YijXbu+Bahpt/dD3iwYV4bM0GHDRgYs5hx2DelsfB0xRhFMF2PQw7
      87F8sYnvfPd7cOoHwdAZWGLDWmFB26h0gV+jAXcD4VkhnIbTiyAccZFdPel34CbCT4ZwPuEA
      ERD9QQRzYe6jsF0b/I296hLxR/OALddyC0xiHmUifncM65tW0any4s3ifiHOOYItAYzPGtC3
      6wg/GMK6uNrXkvgJrIctIAXS16TgBgd3OKLLo0J4ghqHk6Yp0mNSRB+KYH/TBp+b9+0qB6mV
      i9TKAEllLdleBtZiwGRkRRzH8vv2tTbc35pspfrPAuJ/BJKlxdO7fG37+zac/+OARQzRb0UI
      PhYUNsGLagMQmtPdvRHbogEsWzKCdqsNp95AGnQRJiksE3j8ic0484yTEXRa4LqNmqVhot2F
      V2/CMhhaExNwak3YQof72y7MH5qFboJAXjwpfl+M6K8j2J49pRy3EAJpkiLaGwEZYI1YMG1z
      ihScjoTIK0Q4FzrQ1/SkfXpKiujOCF7d26frvVQUhiG0X9NgfSc/yfgCjuC2AN6y4nijMAL+
      MA8cA4D43TH8v/ERpqGs5B0EQUHnzrJMRosywaB1NMAAMjcrqFJADoyUk14YY3C/7sL5lAOk
      QPLmBP6XfHAzz+ajBBdN01D7nRqs/+g5bf0v+wivDqV/idAhANIAb57chLZp0r4YEGjf10Y6
      v3e6vGgbQG2vtL+IP8tRP70uDbIyiYbAxJMTaPEWGo3G8yp9Trqh6r1WKcsyBPcEqF1UyyMN
      kUO6wTcCsHcwOLWXn3fZ933Y59jQH55EsyyB7k1d1F5fjLnpjHdQW1LLJTDy+pl7H9mL7dF2
      NBoNGbFZhcqokpeM6SiKZOUQoIfacM4L12CCwXjSAGszpKel4GZ+Go+Pj8vsLk3T4FzjwP0N
      FyxhEA2B9u1tJIcmshJcmY8ZY2ie14S+ajKKdAFH+642shGlU8x+meEKeqGVGKqo2+yCL+DQ
      N1Tr2sISsL9tY+DcAVgn7Xt4R5qmiNZF0G7RwI/iEMsF7AG74AvQdR3aiRqyUzNZ05IJBve3
      XERrI8SfimE7L696QYZhIP7lGM4qB8iA7IwM2nFT8Q+mM/BDOfTHJ+e3C1hPWnCOcwqOqCqS
      TrKOgPs/LjzhoXNeB9zLezSTSkK1fKiNFmMMggkkxyW964heoJ2a0B5dEUE0BfTHdSQXJrnj
      VOQbfGRkpHJMwd8GcP/YBbpA9CcR+HCpy9FL6Ql+oZSmuaphf8aGcYdyDJ+UASmgPzEp4RoC
      /g0+3LPcWUdqCiHgr/fhnutC265BQEAsFgj+LoB9VbHokt/2Yb2p189WXmNAoLuhi/rwyytF
      kjzw2YoMbBeDOF/AHZk6N1EUAb8H2F/pbeDgrwJse8c2CV2qkh7oGbijAOyBlAAAIABJREFU
      o6OouTXM/f25sL6fC5/kzQm2/8N22DVbSv7x8XHUajUZr0V+FLWBHTk3Oc87vatldKpg0JlS
      XssNE1V6mZtvRdJ1Hc7rHYTHhuAf5TBvNJGekyL4YgD7y7bcAKzNoN+u55JulhuAcw62goHt
      6OW5si0Mzp87CC8PC40XxG0C+n1TTyF+EAfTf/7qD2XllYmf0ksy79f5x7ZKp5eR+1lI/aHc
      bbUqHoWR1Kxaoc2pcauBpt5EzHJDljLM6EQlRxihU1TqnE4LiuPqp01I49i2+8LQBGyo6FYQ
      BLJ/wCsqkJ308trCGvTv6Ej2JNCu09BY2kDyKwmyozOISSzO+JGB+Il42rQ96nPV7XYxOjoK
      /1wf2bm9hm8AwI+ZWtBV26BJ/R8AsuMydP+7i+i+CF7z518viPMY9996Pf71P76Hna3cSFx5
      x3X45je/gf/3g5vxzGP34Fvf+hZWrtkCzjM8cteP8OjGsbwq88lKwztbIDsmw9zfnIt58+dh
      cGgQiz69qNB7i9pozZ07F8IUCD8eQjQERF0g+kgE9/Mu5s2fh6HhIcx9z1zYvLdxyBdARW2r
      OsCYwsd1N96B9u5NuOVnj6C76xl8+Rtfx7rNLTy99il0d63CT1dsmrW9SQF1aZrmCNMrSQWa
      jpIkQfyDOG+1ynPmjH8lRvSlSO72cshCu91GFEVgjGF8fBxDQ0PQQx36YzrMG818Ed8bAfMh
      A+6iKIJ4WqC+vC6xbj7C4W/0KxM5fh7U6ezF9udawOgT2FQ/HsuXDAIAwr1b8OCzXZx2zGKw
      dAI33r0Wlyxfglvvvw/Ngy/EJWccApYw8O9x6Cvyqsz8WI76GXXZwVM0BXat3YXde3b3wiUM
      A/PmzUOWZYiDGAM7BwAB8CM4Gqc2oG2eRGEcgc49HcRLYhhtA87fONCe1RC/J0b0xmKpFGqu
      UfNsPHbfHXjy2Z3AyHwcWqthcK4Jd/B4LGp08PDjG3Dc8tOhxXlFat/3EQQB5syZI08FqhHl
      eR7a7Tbq9bp0qL6iVKDpSNM0wAMK8PxdBvTlOmAA4adDaJdqstMkSS81oE7XdWgNDemZKdIz
      e4kU4LnkoOoSxhwD/Fgu0YXslOxlFg9kIe1sxoZgGGcsm6yRIwTWrluPI489C4h34vof34WF
      x5yAu+57GAfNH8SWsQlwAF7DRvbeDNl7MvBdHN7lnmR+II+gFcgrAQ4ODoKxvBDC6Oio9Ap7
      R+SnoCY08MO43AB8CQcfyk9U568dWF/L/SnGfQb4LRzx0vxkYYzJHIA4yXDo0SfCdtdhV+Rh
      28Yncc+963HwSQYG4w049tTTwSbXjmqSDg8PY2xsDEnSy/gbHBxEt9uVXuh6vY5Wq3VgbQB2
      LkPyjgTmdSb4/LyhshZNxgt93EXrnBYCLeh9X/FQArmkKPsPVKNPX6OD7WbITsvgf82H/Q0b
      whPwf93HgD21GNPPjbI9+ME1d+Hw45Zi6+6DoGUBFg072BPXcWLTxOoHnkF9ZABbn9uCo+bP
      xbata7CbD0OgFw6haRrSB1NoT/TUv+yoDP6X8tTWKIpg7jBh/5ONeruO6IMRkhMSdLtdGNsM
      6M/oMO4wJPSanZj/Nm2m0KBBe6YXkoJuXm6RHcHktQFgaGgIWZZivDOGjj4frz/nOBjnnoFu
      ewwwXKx5qI2NG9ZD2ANYOGBh7969GBwchK7rssYoY3l5FONhA57rIT0uRcbz5BrDMA4cFQjI
      mTRsh8j2ZBCRQO3sGrS9k9JnLkdnTQd+7GNiYgIjIyOFXFJqprb1qQdx36oNGF5yAk6YJ3Db
      E9vxgavfAvMaE+5vu0AEZGdn6P5HF9zLbQhq6E0q0M/7JOi0x7Fj206kQsDSQqzfASw/4WBE
      KYNjGQg6E5joBBgYngPXMsCzBEmmoVF3ZbQm5xzBwwG8Cz2wFoOAQHppivT1KZITE0SnRhj8
      lUGYN0+Wnjk6Q+emDth6hvp76mA7GSAg+/hmR2dor2hLb7D1Iwveb3n5fJ6aofuDLrJaJvH/
      wcHBQhrkTGCGEHnp84mJiUJdKi3TUPtYDeb3TEAHoj+KMPahMYyOjmL+/PkHzgkATHoVmy7Q
      zL2a0cciOH/vQGgC0R9HcOoOtFgrJL0AkJh0FEU4/PhTsLedwncdHH7CidjWvhcAYP2LBdad
      9AX8TIf+uI70tWne4MEZAHuAwR/2YR1rwbT2zcO8v0k3bCxYtEi+nndQ/r8xCdDUB4ZRVw4s
      XddhohhwpmkazBNNBF8LYH7HBBhg/NSAeZMJx3agf0svlIzXNmtgLQb7h3aheK4kr4fIMJZX
      d+NHc2jbNaTLUwRmgNaeVqHyH2MMURTJhJhy4S41JINOroGBAbRaLbkJ9F06zGtMsIQBCWB9
      3YL7URcLFizA7t27D6wNoJJlW4h/L0b3qi7AAPMQU3olyShSg74Yy2sb8TTE/IMWYe1zewvX
      44dyiLsn8whqgJibSxyLWxj4nQGYN5iABwRfDPKIyURAt3UYltFLLHmJkmvKlbefL5mmCe1t
      GuIrYrD/y2Bel+8gFjEYtxmIr45hf8HOHVfnp4iHY5hLTJlvIZiAGBEQ8wXCvwplWiP1AEiO
      ToCjc5XH7/oYHh5GlmSw9LznAGd5iMPw8PAU/wM1Si+TYRgYHBzEnj178lLtng4xV4BtmhR2
      h/ZymwcHBw/cDcAYg+3ZsI+Z6pWVfcwEg3WnlXcgfE2G+E0xHn/gTjz6zA7MPfwErLrnJtx1
      1yPY4+u44lOno8YAbYuWZ0UtTWFyE7UtNZg39Aow2X9pg3+Xw7jLQHp+iugDEcybTWSLMyTv
      T+COuD93FWm2pNoDwWkBhCvyIreGQPraFMlVCdILU2gdDdn5uXE8ftU4hsaGYNxrILksQfbB
      DMxkhZRVTdNkqAypn4ODg9AjHc2PNfMGJMsz+P/oQ3d7Ce/0fWq4ohZNJliTssQYYxgdHcW8
      efNye+0LNkRdIPyTUF7HNM0DywaYLY2Pj+dqz2Mm6pfV5aIGXw2QvK1PbsAkNBeGoWz2Eccx
      5o7PRfOipkyzFLYAixRv5eRrAYHoD6JXbGulOIyR3JjAuGVSWFwew2k68lQjRiQPLkloCndQ
      iXJ6SccnhrV/bKP2qz1eDD8eYtdHdsH4/+2deXAc133nP31MT8+JwU2CB3iJkETqpg5KpiXK
      umVZB72WVeUjZTkpl2vXLm9tNl65srlr13YqqWR3vZvETrIVy/Y6siXHuinqoETxlihSJC1e
      IgkSIIlr7p6ZvvaPxmv0DAY8JNEiMPOtYhEcAgOgu997v+v7/aqqr/bgui6jo6MkEgkKhYI/
      jeo3tsb/rlQqXml83DpVDOwFOeO5XG7mngBTIdgRVN8KKBdbEspmhcqaaiFdMcEodqBcLufT
      +VKpFE6bQ/FvioT/Vxh3toszxyH8g4kHXCwGCQn1DRXTOb10/IUAITgwCXdA6VZvfCGshP3E
      M4izCb9kWSYe98ZFxE5sWZavQyQg2Z68ZSaT8QkvYtHUSucE8wHAb66Jzb1UKtHf3097sp14
      Oo4V9obuGmoBiM6vaJBYn7Bwk65X5dBdr/FT0znO5XK+2bKiKJ6/1LgvmiR5O/vILSMk7vOG
      xeRTMvJvZNRNKtb1FvL7Msphj4ds3mtOCxU50SOZCkJsuB7ONv+oLTW7O1y0pzRcyQUF7Gtt
      yl8u+7nZ8PAwPT09FAoF/8GvPVnqzQn5BCldp7u1m9R/TaH9XMNtddF+oDXWAjAMwz9uAcyL
      TPLP51HXq9hX2ZjXeLuZaZrk83nfYUZ4X4nFYZomkUikasJRNG4MySD5T0kiTgQ36iIPy4Se
      DeHMdTBvM5HLsr+YLmQc3buNV3ccYs2azxHTwCqe5BdPvMBYpsJdD9/NlufWkrMlPvPIl7EO
      v8b/3ZDm21+9/4zv67ouZsWkcrICLmjdGmbGRP893Z/lsi+2yT6RJV1KY4/a/twQeL0aEcoI
      1I5iB3OG4Ikf3R9F+6mGVJaQihKRv440xgJwXdev19cymsw+06tGBGCaXkNnzpw5uK7L8PAw
      mUyGUqlEIpHwb4C4sKlUyjfjECKxrjRerehxKH+1us1fLBarTgLhr3YhYf4lK7i8WPJZjkqk
      i89+fg1b1m8i3trDmkfWsHXDVtzKGLuOOVwy7+wagZZpYf2jRfRPomBD+T+XsR+0qxl+e2X0
      x3XCD4UxQ6ZPcoHJHtDi42BjU7wGE4sjnU7TqXdWGWW7CXd6DcMBfpJ1rl9jHjFJfiVJy+oW
      wj8Ok8vmGBoaqmvd6jhOVSexo6ODaDRKZ2dnXS8zQcZIJOKUjCKW7cL4QnNsC9PywgWzUqJo
      lDDNMumxMcbSaUrlD2re8duFa1fYunkLi1asJGXl2Lh1J0tX3MjhN5/lnd07eWXtegYyxhnf
      p1wqo/+ZjnxSRh6WCX8vDJI3Ou17h9kSkW9HaH261c8VYEJWE6rDHcVS0J7XCP8sjJKtFswV
      0HUdp8+h9J0SzjwH6waL8h+Vp98JIKYEzzbWFLPw+p/qfh078u0Ibde00Z/qZ2xsjEQiUTVz
      Hg6HSafTvnmzJHmak0H9GoFgeW7/tvVsP3gSN5RgzQP3EFYMNr+8nlG1hXtXL2ftU8+Szg3T
      t+ou+ndspf/wPm7+0u9zQ7yaK3sh4L3N63hp/VZ2nnC5Zo5OZ3uY9Zv3sHvfIa697ip2bN3B
      gff7uef+h7nuDpsN2/bQ03LmeyL0mHxoQBiKf10kMitC+K+8UEdyJJRd1SYYhUJhksWuLMtE
      /jxC+H+Ou8uvssj/NI+te5uOZEtoz2rEXo9hrbKo/F6F/KP5iVNjupVBxY57LkSXbDZL7KEY
      6svjGpeqS+HJAkPLhkgkEoyMjJBMJv04M9iOD0JMP9Ybd5AkicF9b7Nuyy6Ssy7i07fdhCqD
      UymxZee7XH/NNbiWwZbXNtC7cjWzozbrXtrE6ttvhvGSYSQSuSAUqSuVij8agmNy6PAACxb2
      chbqhnUN6oIQU7uRb0fAgtIfl1C+oGCUDOQjMvFPxZFHZNyIS/HHRUZWjBCPx/2SpyDliE1I
      UTzdIn/iNDw+cbrAG3QMrwsT/UIUqSJ5VNDHC0h3Sz63YdqdAB9k1kZRFMr/voy8y2vXW7db
      lK8qk9S92LKjo4OhoSFvHn6c5C0edpgcd07Fijraf4LbH/gcb7/6IiXLIa4FF6nFxtc3csmN
      t9AWVRnc/Radl1zhqZCPN3KEU2Jt1/i3fTqIapcHnUsv7Turrzubn1FVVVgDxn2GT4JRVRUX
      F2O+QW59jtCGENblFsOdw+iq7pdbg4tL3B/H8cIZ7eg44f8iB6d9YpNSX1d97oZUkVDfUpE/
      I/v9gml3ApwrRMhUKBRQj6tIYxL2RTZO2JmUKIEXZ6bTaV/AqV64U/s14t/p4/t59tWNtM9f
      Tl+yjDPnYva89AyHhsb45B2r2fLcekItEW7+9MPYw4dZcPEywoo0ZUlRfD8hKXihV47OBcVi
      cVIudzo3nqASYHCMBTz1uvA/h5HSEpUvVqgs8Uq4iqKQuDGBsnecKiu5FJ4ueMZ94j7OpAVQ
      dXQHcC5Jpmma7N+/nyVLltTlmdZLsMT7Bz9/cHCA7lk9ZxU2nE5VLqi/I2bZL6Rc4YMinx7h
      /f7juC60dfeQ0EOkh0+QKZQJRRJ0teicODVKe3c3hdEhCmUTPdFKZype937WK4XKskxiRQLl
      4PgCaHXJvempQmhvaCjbPyKTvAsJRnqQN7fv5+qVK4k6GTZt2c2VN66iRZfBKrNp4xtky2Gu
      v+Ey3t26hcispcyPGmzZfQi0Fm5dvZK+vr6qcpq4oLUhUW1FIvggd3V14zp2bXPzAyHYhRaa
      mkLdbdrCKnHgwAGO79vNsru/yNW9rYyc6Of9Y8fYPxRieYdJUYlS2nuQJW0a/ScGOGW184XP
      fNInLzmOUyWuW3uPHMeh9IclTw/WkCh9q4TdaaM9pxF91MsLpvEVrI+NG7exeHEPG9/czPY3
      NtExp4PXXtsIQDk7zJitcfllFyNZFnMW9TF8cAsFfRZXXXkZpdyYTyirba2LxLuWHxwk1JwP
      1O72hmGQy+XqnnTTCnoLq2++ifl9V7B8rldsWLx8BX2987nllpW0tUTpPz5AMtXFshUrWdTV
      xidvvgkIDDPWbEC198h1XUr3lshtyJHblqP09RLIHlNQ5AUzbgF0toR55bVN7Os/gKl3cMnS
      i4loXmxpOTbH9rzFa5u2o8SSvL9jPcOVFN0dLURcg56LlqHJ1VY6ArXsseDn1KtNf9QQA1zi
      +wgziemM0eMHic9egjaupOHaFocGsyye086xYYOHP//vGDp2ANfMcLgQZUHrRIVMWGAFUe8e
      IYHT4lBOlH3FDusmC1cbryKdD4+wjwu2bRNJttPX28pQViZuplFbEhw9OspFi+Zh2ybz+lag
      j7zLgNTFZcsvpzi0D621lyPv7aHv8ivRFWlS4hv8uN5k4/l+8IPfXxz7ooIyXfOBSqXCqcFh
      5l+0EIxRXt26m/ldUexQJ11tMXSKPPfiei6++kYSdpHk3AUkI5rf1TdNE9u2yeVyVbZKU92j
      qn8vcXCudHAWOTMvCT68ezPrdw5w5923ESoNsXbdNlbdcyeb173EzbfdzJZX1uK093H9RSle
      emk9yd7LWbWij8HjA8ydO7dqp62X8IrXgx+f7iEUsegHfVBr51lgYk4/kUhM2wUgPB4ATGOM
      gp0gFT9zSirM84RHWD6fR9f1SQWLIHEmn8/7YZHQJvUXzExbAHVjY9emUDSJxnTO9LgI6b5w
      OFzVcKstf05VDq0NS+o9oLX5RT2IcV4xNy/eW/xM0Wh0Uld0OuFMIZxpmr5LUO18D1QXBsRi
      qG1Suq5LsVgkFAr58oxCDkU418yoKlBQiLUWyfEeSjab9WfYg/xS0f11HAdd1/3wolwu+35k
      wuQBJh7s2ote26UUBuHi/SRJQh6VkfKSp1cfmtipNE0jl8vR1dWFoigUCoW6c0+1ymzTEWfq
      aQimGEzeVETDUpIkX+tH+ArXC1+DynCJRALHcTw+sKrOrCS4NjGt90e00oMJkyBit7e309LS
      gmEYDA4Oempx48KrQnz1TFWf4P85jsOOHTsYGBhgYGDAY6FtDZG4LUFiZYLYN2JQ9twZLcvj
      Ihw8eNBnSYmFGjxFIpEI0eiFKcP+UUKQXkS3F7wHv9ZQT1yrbDbLiRMn/LF08TlitxcQ/YFI
      xFPAmFEnwNlAhBbi4VLHVCLfiaBuVjHvN+ExaG9v94/fYIIlPGuDZbipavHia0qlEkNDQ1x6
      6aWegsT/aPFHf0O/DBH6QojjLcfp6uoimUz6x3S95piYF5rpDz9UNwABQntDRH4/gjQsUf5P
      ZcpryriSl6+JEXRBdspkMpPC1yomYE6l++lucKeZOO5HAXEKCFW48D+F0X7uVcHCfxvGusmi
      fFsZTdPIZrNV489tbW2k02kAfwepNxIBEzXplpYW5s+fz6lTp2htbcVNBE4PBZyow9KlSxkd
      Ha1K3IIQ7yVI4I0AkYsJCmTksQjqRu9x1R/TsW6wMOd4m5hQ7BMuouL6lctl8vm8pwA3rhYh
      ORLRb0QJ/Xrcs+Dj+fU+XgiStWmaSGM1D/BYwF+q5mFTVZXW1lYkSSKfzzMyMoKqqr6RdL2S
      6axZs7Asi4ULF3pqBn9Q9hTrDslUvlKhdEmJdDpNd3c3iqKwaNGiST+v67rE4/ELYlL0twHX
      9Qw2gsOHwfskGRJSSfLLwpVKhWg0SmtrK7IpI1veNKlQtR4bG/NDJ8VU/KlgmGFVoHOBYRgY
      hkFoX4joo1HkgzL2tTaFxwvYcU/9wbKsKkIGTB7HFiW2qUKT2lxDvBZ8r9rXar/ecRwSiQQz
      pV9zJpimSS6Xq3ot/HTYC4EKEpUvVSj+SRFXcX0ZlHg8jrZJI/KNCPKwTPkbZYxvTPiBCXqr
      4iqkvpwitHacV9yoC0AQLCqVCkpGQR6WsXtsnIgX46fT6ao6e+hAyHMnvNHCnDWRnBqGgWma
      vlDs+cSZZu1nCsTmVNV1R0I5oSCVJKx5Fq4ykeQKqmri0wnUN8c5HwmX/Lq8b6KXy+W8kDcc
      Rk/rhH8WbswcQECSPLUBVVUpySUqyUpV6CP+z7ZttNc1Yo/EkAwJp80h/1Ieq9cbr9B1fTz5
      Mjn4zmY27eln1e13MbL7TQ5lVO6651O06CGMzCk2bdnOZTfdzeBbz7PlveM4idn87ufuwXUs
      nvvljxnMaNz/yEMc2LiWo7kYn77zGjasfYExuYP77ryFRnj8xfj6pGqbBGa3OVFmdmtsWqdA
      MCkGL6lWO1Ts/2CTz+dn1ijEuUJ0VEVnUJTPhHATeHG//r911M3jepWGhLPUwbrS8t/DG8AC
      QimuWNzBbw7t4VSukzuuiPPWICzsTmKWDJxKGju5gL6lS7iir5usobNwXheOVWFwzOChBz9N
      8cR7DJQ7uOuWq8C26OjtQy4eJxTvoaP1wrJeOl8wDMNngAUbXFONQYtml7TY03aSXInyN8sU
      P1UkV/D8AOLxOLquY9u2P0mrKDNwHPqDQJQXdV0nm81SqVTIZDJ+Bci+zMZVXCRbwg252Muq
      S5SiyRW2j7HlUIaV16/mvU1r+bd1B9AuugOAaKqDRFhh3NqZXe8cYPllNwAgSQ5jR/byD//n
      XS65ehl7tx/gwLsbuO2BRyge2YXauoRZrdO363suEAmwLMuUSqUq105RfnZd1+eES5InrDUw
      MECiL0H4hTCaqmGFPKmalpYWlLKCPCJjt9jjChwwemoQW401F4CAOE4TiQQnT54kHo/7pdLy
      Z8u+I7x1p4W5olpGxXVdJLfIk0+9SEfvAg4dG8JVQihaK1f1zaL/2AARO8vLr2/Gmhdi9qrF
      ZNw4l8fDjJ4aRNEkIm3z6GAQvbWXnllD2E6F4f3b2fTuYRbNN5g/bzapKX72mQRJkkilUpRK
      paruuagIueP00XK57NNINU0jGo1iWiau6pItZonH4ySTSdRTKrHfjaFsVzxfhx8WyYSO8tZb
      e8jlRho3CT4d8vk8pVKJTCbjlziDvNzgsJxpmpTLZaIRnUIuR9myiSZbkSo5TEknqVfY+s4g
      1yyfz2i2AIpGV1sLtuOihWS2b9pM3zXXY+dHMaUw7akExWwaw1FJxVSGR9O4KLR3dtDZdu6+
      x9MRwk3yTPNWYiJUhLCiypbNegtAURQiP4gQ+cMJtQrjLwzKXy9jZAbYvP1I8wSoB0E7FMwj
      gdpYVEiniEUSS8qkxKRhdGJWZ+V1nsbQrOiE166sgAtcfcNK74XWDv94jyZTiPbb7Nk9F5xk
      yvmGKCsbhuFfc22zhvb/NJwFDqWvlnCiE83CIE3UdV0SiYR/byLRGqmWKBhjg2zbd4pP3rqy
      uQDOhOAoc7BKJEwbxBiuiF0Fb7cWtWQN8Zr4WnHUm6ZZxWqKRqMNU/8PQtM0385UPaYS/Z0o
      8inPv5k8GN+ZmPqVbZnQ+hBSWsK804SoZ680OjpK5MEIymYFdZ2K9SmLyoMVCmPD7Nuxlfff
      P9gMgWrhup7NkvWeha3YOPMdHJwJT6nxk8EwDBKJxESHsaig9Cs4nQ52u10VswZ376lUJoIQ
      80aaphGPxxtq9w+iWCx6ucDrYaJror4rp3WzReYXGYrFIoqi0P69dsJ/E/b/L/94Hifi+O4y
      sVjMHx0vFotVzc3GGCw5B5SLZeQ/komvjpO8LYn+Ex3DMHwB3FOnTmHbtk/Hc10XtagSfzhO
      fHWc+D1xlF1KVSfTdV2/xFpLowxCvK4oild+DTizNyLE729dZuEsHs+7JBfzfk+71VfrfnJi
      RETZrKCc8MJWQX5Jp9OMjY0xNDTk5w3iTzMEqoF11CL2wxhSQUIqSOh/qRP/YtwPX8LhsK9N
      n06naWlpIfLCxKCWckBB/xcd9zvVCdxUcXxwUQgvY8CXZG9kiFDQarHIP5Mn9FIIp9fBvN7E
      zbl+8mutCAhjLXJw2hw/kY5EInR2dvocAkEw8idDP85f8IKE7rXRpfx4fN5RLYkiiCjCkK1Q
      KBBtrxHM7XBRVZWRkZGq43cq+qSmaT6tr5F3/NPBarWwP+f1X2opqcZ/N3AWO54w1u9UsFts
      8tm8N/YQuPZBIo14rZkD1MCsmFR+WUH/ro4bdzH+zMC6wqrLzYVx/2BXQf9L7yi2V9gYf2pg
      t9p+FWMqAotgNNV6EzcxgUKh4HMzgtdIVHlEgUA84K7racECJBITVTdxyor+AjA9xXE/LOrJ
      oddCGLjVcnFrx51rIfoCwjU+m81iGAbd3d11E+Kgn20T9VEqlSgUCpOudy6Xo1wu09HRgWVZ
      jI6O+uK5juP4ngLimivDCvoPdKQxifJXyqjXeTlWw4VAQYuk02GqRLUexPzQ2NiY3xMQrwcf
      /OD7iUS3idMjWGauvR9CcSOTyfhcbdd1fTdKUbFTVZXIYxG0X3inhfKmQmltCXobMgcos+6p
      X3KsIHHXfffRndSpZAd48tcvMfvSG7lqXohnnn+NBVfdwg3L5uM6FV5//lccNdu55+pZPPni
      RirlCrff/yADOzcw/8Y19CYnjOWEt1a5XPZvQL2FFCRqNzE1xNBavU1LiAi0tLTUJdmLxSDL
      MsqOgKl3v4w75DbqAlC58c77OfLWKwyMFelO6mx5czurH3yE9rDMxhef49aHvI8BjIF3KHbe
      wOev7kGRZR599BJeW/cSs1NxEvNbGTCgN+nt6KlUyi95iqZWR0fHaUueTZwekiT5TTFhUSsQ
      i8Xq5mTBxqXP515jonxv3IPseht5gXd/G3ABKAzs3sTO4yVWLPXi71wpy9onHqektdPuDPP+
      Ez/GjPXwlTV3UhrLsGfnPg5vzHDvo18jMfIO+pwriMXiEJno0IobJfKAYrFIR0fHlD9FM/Y/
      O0iS5I9FjIyM+Lt9uVz25euDCbDwJ1aGFaLfiqKuVzHvMTG+b2BFSrInAAAJ8UlEQVStspDH
      ZNy7XSJtHoOv8RphxRHePTaMWxrmxEiOg0eOsmzJQpRIDD0c4tKLF6PqMXQtxODxIyhzL2GO
      JhGP6kiSza4DGS5f0kF6YD+/evZV1q59gVxp4ngWXAIho1IPoVCoIaRNPipIkkRraytz5szx
      N462tra6TUVfAe6nYULPhpDyEtrPNULPhzBvMlE+pxBtj07QUxutCpTP58jncjjIqPYouw5b
      XLN8HkaxiKrphBQZwyiiaiF2vbWT5deuQKqUsFyZiK55A3KqimNVMIwyruSptLmO1+kdGBgg
      Ho/T0tIy5QOeTCabCfA5IkhhrYVkSigjCm7MxU544Wfk+xH0/zYRLhX/tgiPMom73XAL4HRV
      IBG+VCqVKr+wIOqVM2GCmyqG54rFIm1tbX5JVCRkqqo2jLbPRw1Blg9ef9mUiX7Tkzlx5jgU
      /66IdaWFckwh+rUoyg4F6yYL4+8NYvNik5LlhlsAp4NlWb4anCCgBxeA7MjIBRk37OKEJ2v3
      ZLNZkokkaknFrJjk3ByRWARN0/wR3+lgkn2hQoiGmabpLwBtg0bsoRiSNZ7sPmSS/+G4C2RZ
      Rs7LuEkXPaXXlZNsvBzgNFAUz5Yz2CzzB9QshdjXYySXJ4nfF0c9WB3CiCRYf1YncUOCtuva
      mPXELIyCQblc9qX+mg//B4eYl6oSDtOpeordaECaMuxgtVvoKX3KkfLmAgjAryAoyiTDttD6
      EKEnQkgFCXW7Svjvq7X5BU818scRT/hqRCb8/TCtVivFYnFaa/lfSKjV+jSvMil/s4zT6WDd
      aFH6j6WqzSsej5921KSZiQUgdn6hRFAV69du3FNs5K4ayBlkQIJUKtUse35A1Mqo156gruxi
      /BeD0mMTUuoSEwK4YgAuCDFyDs0FUAURW1qWNenINFeZmF8yvYG3y2zKXytXcYOFwnTpz0tE
      /iACBpQeKyF3y7Qkp64INXF65PP5Sa+dLowMXuepfNQURfFJMc0kmIlZnnw+j2VZ/mzJpAoQ
      ErIt48oujjTh1xX8vJAawrU84aZQNNTwpJYPi8zwAE/+4l/JWkkeePghWlSXvdteYfOeY9x4
      +2eQT77Lpt0DrLrzbno7E5RyI7z58nauvv8OwqPH+PVzr9B98bWsurqPY7vWM6At5aZlc/0F
      0DwBxiF2GuETMCUUbyEoU8RAjuv44dH59g9rBJQLBbqWXsWDV1/hveDCvEuuY96C+byy/W0o
      V7jvjuvYtv8gvZ1X4jjQqavkgQNv7+S6ux7g4NbXyeW72PebA+R651W9fzMJHodVzvPK00/w
      1IsbqDiA63D0N9t4/F9+wuGhPAfefp3Hf/YUp7JerFnOj7L+hdfIA/mh9/nJj3/Kb/qHGTn8
      Dn/3Dz/i5S3vfay/z0yBFFI4tnMTP/rRP3Oi4IAkYWWO86sXtjB7Xi/tusETT79KIuUpb0Rb
      2knFvPC1Z95s1j/zBCOmzo4Nr9G1cDH5bIbgud48AfASLdM0WXbDnQztfZWBPCxIuCjxHh66
      fx5vbNtEPgP33rSUHQeO0HV1H4ZRJiE55IGdm3Zx32fv5/VX3sBJwL1feJS5kTN+2ybOAo5V
      pr1nMfroILlcFseAE0eO0d3dzvEj7yEZNvNmt3NqZJhjAwoxqcIb27ejSSF6zCwds+Ywlh5D
      S7Vw7NB+Dme7sVnhv38zB8DrDpdKBgfe3UpO6uaKZQtQJJfCyACbdx9hxYoreHvdM+w7mefa
      1fdw5eJZABx64w2in/gEoaN7efbVbZwyLO66fA5v7uln9pIreeBT19Po1/bDIpMeY+jkIE4o
      jjN6mExkHnNiNmO5Ml2ze3DLWYbTRbradd7cdpiVVy3m5EgaWdWY1dXO0MmTRJLtpJJRJLtC
      0ZJIRPVmDhCEJEmMHNnJ5t2DLF2iUcilKDsS659fS+fCixka7Ge4onPpojgnhkY4mZTRbIN3
      9u4lkWzjys44ixf2ECvqhOJhll8a4/ho5uP+tWYE1JDGrDnzvX90tTF3/PWUGLTV24m3eDnb
      bbd4VkmLWtr8r5/Xu2DizZQICa26itQ8AfCS1eET/Rx6/xiuqiEVhpF7LiVaOkWmUKG1ey4J
      2WBgxGDB3ATrtxxl5WVzODI4TEiPMbcrRf/gMPMWLEQxcxzuP0nPgsW0JSLNE+ACR3MB4LG3
      hPbP2U5pBrUop4IYfGviwkUzBMIzWXMch9HRUX/OHCYaXEKpLQjRTGmWOac3mguACX5u0FYz
      KMvtW3WOO46bptmQep0zEQ2/AMQDLkyZBabS9RQ+w82df2ag4RthYthK7PJBZWao5gNYlkU+
      n6/LSmpieqJ5AgS0e2ol92p3eTGP3qQzzhw0/AmgqiqxWAzLsnwNUJETiL8FhNpwo7i1NwKa
      d3IcruupDefz+bpqA4In0Iz9ZxYa/iwXDuKu6/rUxXqGFoLS2MTMQkMvgGCc7zgOsVisrnBu
      PB5vMrpmKBp6Adi27Yc84HWEhRqEQHPnn9lo6BzAtm2fMypCn9oE13Ecv1N8Jln1JqYfGnoB
      hMNhXytGcALqPeT5fL7K86uJmYOGDoGE4zh44U89vc6pzJqbmBlo6BMgyNk93YOuKEpTzHaG
      oqEXgBDAEr6/9UaXFUVpitnOYDT0AhDJbS6XI5VK1dWbEQ4jTcxMNPS2Fg6HfQnEeg+/LMt1
      BVVrETTCblqdTi809NYmyp66rjM4OFilJCZJ0lmFPq7rYqQNKv9Ywf4Lm+K7xUm6ok1cuGjo
      EwA8kouI/ev5BpxpN69UKsjfldG/65kx2D+zKT1fQultzg1NBzT8CSBYXqqqYpompmn6jo+m
      aZ7xPWzbJrR2YkxCPiTjHnCbTbNpgoZeABAwUlYUdF2nXC5TKpUwDINsNnvGB1lRFMxbJxaK
      s8BBWtx0gJwuaPgQSJwCpVKJcDiMrntOIpVK5ayYX5qmYXzbwOg1kAYlrM9a6POagrjTBc0F
      IEmTSp2iqlMqlU5rZu26rpc4R8D8kulXgSqVCqZpNiVRpgEaPgQCfBYY4PvNCppksVicMgwS
      pnrBGaJzyR8+yM/ZzC0+WjT8CQDeQ59KpXynx+CuL5plsVgMWZYnnQaF0WO8/sy/0nrrt1hs
      7eGZlzdR0VJ8+ZGHPvKf03EcDMMgHA43R7Q/IjRPACb6AZqm+RamwvEFJtQg6u3qsba53Hbz
      tbhAR+9FLJrdSldnF/J5yAFUVSUej1ebxDXxodBcADUIhULEYjHC4TDJZBJd10kkEiSTyTOy
      wizTYfmKlShmFtM6Pw+pUKZo4qNBMwSqA2Gwput6lUpcPWQG9/Orf9vIqcgg0Wt62bFjN+HO
      hYSU81cFalaYPjo0xXE/BMQgXT2IUYomLmw0T4APAUmSpix1Nnfp6QG1KfN3/tC8thc+/j+D
      cnwo/f2+7gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Mortality chart' width='192'>
      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
      SOw1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Recovery cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 confirmed countries ' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
